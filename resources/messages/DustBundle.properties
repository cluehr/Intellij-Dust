dust.files.file.type.description=Dust templating language
dust.page.colors.descriptor.tag_braces.key=Dust Tag
dust.page.colors.descriptor.identifiers.key=Identifier
dust.page.colors.descriptor.comments.key=Comments
dust.page.colors.descriptor.operators.key=Operators
dust.page.colors.descriptor.values.key=Primitives
dust.page.colors.descriptor.strings.key=String
dust.page.colors.descriptor.data.prefix.key=Data Prefix
dust.page.colors.descriptor.data.key=Data
dust.page.colors.descriptor.escape.key=Escape Character
dust.parsing.no.open.mustache=No corresponding open mustache
dust.parsing.invalid=Invalid
dust.parsing.expected.path.or.data=Expected a path
dust.parsing.expected.parameter=Expected a parameter
dust.parsing.expected.hash=Expected a hash
dust.parsing.element.expected.content=Expected Template Content
dust.parsing.element.expected.outer_element_type=Expected Handlebars Content
dust.parsing.element.expected.white_space=Expected White Space
dust.parsing.element.expected.comment=Expected a Comment
dust.parsing.element.expected.open=Expected Open "{"
dust.parsing.element.expected.open_section=Expected Open Section "{#"
dust.parsing.element.expected.open_partial=Expected Open Partial "{>"
dust.parsing.element.expected.open_end_block=Expected Open End Block "{/"
dust.parsing.element.expected.open_inverse=Expected Open Inverse "{^"
dust.parsing.element.expected.open_exists=Expected Open Exists "{?"
dust.parsing.element.expected.open_helper=Expected Open Helper "{@"
dust.parsing.element.expected.open_block=Expected Open Block "{+"
dust.parsing.element.expected.open_inline_partial=Expected Open Inline Partial "{<"
dust.parsing.element.expected.equals=Expected Equals "="
dust.parsing.element.expected.id=Expected an ID
dust.parsing.element.expected.partial.name=Expected partial name
dust.parsing.element.expected.separator=Expected a Separator "/" or "."
dust.parsing.element.expected.close=Expected Close "}"
dust.parsing.element.expected.boolean=Expected "true" or "false"
dust.parsing.element.expected.integer=Expected an Integer
dust.parsing.element.expected.string=Expected a String
dust.parsing.element.expected.invalid=Unexpected token
dust.pages.options.generate.closing.tag=&Automatically insert closing tag
dust.pages.options.formatter=&Enable formatting
dust.pages.options.title=Handlebars/Mustache
dust.pages.folding.auto.collapse.blocks=Handlebars/Mustache blocks
dust.page.options.commenter.language=&Language for comments\:
dust.page.options.commenter.language.tooltip=Controls which language's comment syntax to use for "Comment with Block Comment" and "Comment with Line Comment" actions
dust.parsing.comment.unclosed=Unclosed comment
dust.block.mismatch.intention.rename.open=Change block start ''{0}'' to ''{1}''
dust.block.mismatch.intention.rename.close=Change block end ''{0}'' to ''{1}''
dust.block.mismatch.inspection.open.block=''{0}'' does not match ''{1}'' from block end
dust.block.mismatch.inspection.close.block=''{1}'' does not match ''{0}'' from block start
dust.block.mismatch.inspection.missing.end.block=''{0}'' block not closed
dust.block.mismatch.inspection.missing.start.block=No block start for ''{0}''
inspections.group.name=Handlebars
inspection.html.file.has.a.template=Html file has an Handlebars template
inspection.html.file.has.no.template=Html file has no Handlebars template
mark.as.hb.file=Mark as Handlebars file
unmark.hb.file=Unmark Handlebars file